loadstring(game:HttpGet("https://raw.githubusercontent.com/Pixeluted/adoniscries/main/Source.lua",true))()

print("Adonis Bypassed")





local OrionLib = 
loadstring(game:HttpGet(('https://pastebin.com/raw/WRUyYTdY')))()


local Window = OrionLib:MakeWindow({
    Name = "KA hub",
    HidePremium = false,
    SaveConfig = true,
    ConfigFolder = "KA hub" -- Put the name of your hub or script here!
})
print("KA Hub ran with no issues") -- Just a debug

local Tab = Window:MakeTab({
    Name = "🏡 Home",
    Icon = "",
    PremiumOnly = false
})

local Section = Tab:AddSection({
    Name = "Home"
})

local RunService = game:GetService("RunService")

local lastTime = tick()
local lastUpdate = 0
local FPS = 0

local CoolLabel = Tab:AddLabel("FPS: Calculating...")

RunService.RenderStepped:Connect(function()
    local now = tick()
    local deltaTime = now - lastTime
    lastTime = now

    FPS = 1 / deltaTime

    -- Only update label every 0.2 seconds
    if now - lastUpdate >= 0.2 then
        CoolLabel:Set("FPS: " .. math.floor(FPS))
        lastUpdate = now
    end
end)

Tab:AddButton({
    Name = "Copy Discord",
    Callback = function()
setclipboard("https://discord.gg/DgNAgPVxJX")
  end    
})

local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

local noCollisionEnabled = false

-- Listen for toggle value changes
Tab:AddToggle({
	Name = "Anti Fling",
	Default = false,
	Callback = function(Value)
		noCollisionEnabled = Value
	end    
})

-- Loop that disables/enables collisions
RunService.Stepped:Connect(function()
	if not noCollisionEnabled then return end

	local character = LocalPlayer.Character
	if not character then return end

	for _, part in character:GetDescendants() do
		if part:IsA("BasePart") then
			part.CanCollide = false
		end
	end
end)

local Tab = Window:MakeTab({
    Name = "👨‍💻 Admin",
    Icon = "",
    PremiumOnly = false
})

local Section = Tab:AddSection({
    Name = "Admin Scripts"
})

local playerName = game.Players.LocalPlayer.Name

OrionLib:MakeNotification({
	Name = "Loaded!",
	Content = "📍The scripthub has loaded, thanks for using! ".. playerName .."",
	Image = "rbxassetid://0",
	Time = 5
})

Tab:AddButton({
    Name = "Infinite Yield",
    Callback = function()
        loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source'))()
  end    
})

Tab:AddButton({
	Name = "Fates admin (Prefix !)",
	Callback = function() 
loadstring(game:HttpGet("https://raw.githubusercontent.com/fatesc/fates-admin/main/main.lua"))()
  	end    
})

Tab:AddButton({
	Name = "Nameless admin",
	Callback = function() 
--[[
	WARNING: Heads up! This script has not been verified by ScriptBlox. Use at your own risk!
]]
loadstring(game:HttpGet('https://raw.githubusercontent.com/FilteringEnabled/NamelessAdmin/main/Source'))()
  	end    
})

Tab:AddButton({
	Name = "Reviz admin",
	Callback = function() 
loadstring(game:HttpGet("https://raw.githubusercontent.com/Pa1ntex/reviz-admin-v2-script-FE/refs/heads/main/Reviz%20admin%20v2%20FE",true))()
  	end    
})

Tab:AddButton({
	Name = "CMD-X",
	Callback = function() 
loadstring(game:HttpGet("https://raw.githubusercontent.com/CMD-X/CMD-X/master/Source",true))()
  	end
})

Tab:AddButton({
	Name = "Shattervast admin",
	Callback = function() 
loadstring(game:HttpGet("https://raw.githubusercontent.com/retpirato/Roblox-Scripts/refs/heads/master/Fe%20Shattervast.lua",true))()
  	end
})

local Tab = Window:MakeTab({
    Name = "🤖 Humanoid",
    Icon = "",
    PremiumOnly = false
})

local Section = Tab:AddSection({
    Name = "Humanoid"
})

Tab:AddTextbox({
    Name = "WalkSpeed",
    Default = "",
    TextDisappear = true,
    Callback = function(Value)
        game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = tonumber(Value)
    end      
})

Tab:AddTextbox({
    Name = "Jumppower",
    Default = "",
    TextDisappear = true,
    Callback = function(Value)
        game.Players.LocalPlayer.Character.Humanoid.JumpPower = tonumber(Value)
    end      
})

Tab:AddTextbox({
    Name = "HipHeight (float)",
    Default = "",
    TextDisappear = true,
    Callback = function(Value)
        game.Players.LocalPlayer.Character.Humanoid.HipHeight = tonumber(Value)
    end      
})

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

local currentInput = ""  -- store textbox input

local textBox = Tab:AddTextbox({
	Name = "Teleport (choose between 2)",
	Default = "",
	TextDisappear = true,
	Callback = function(Value)
		currentInput = Value
	end	  
})

Tab:AddButton({
	Name = "Teleport to Player",
	Callback = function()
		if currentInput == "" then
			warn("Please enter a player name or partial name.")
			return
		end

		-- Find first player whose name starts with input (case insensitive)
		local inputLower = currentInput:lower()
		local targetPlayer

		for _, player in pairs(Players:GetPlayers()) do
			if player ~= LocalPlayer then
				if player.Name:lower():sub(1, #inputLower) == inputLower then
					targetPlayer = player
					break
				end
			end
		end

		if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
			local hrp = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
			if hrp then
				hrp.CFrame = targetPlayer.Character.HumanoidRootPart.CFrame
				print("Teleported to", targetPlayer.Name)
			else
				warn("Your character's HumanoidRootPart not found.")
			end
		else
			warn("No matching player found or character not loaded.")
		end
	end
})

local TweenService = game:GetService("TweenService")

Tab:AddButton({
	Name = "Tween Teleport to Player",
	Callback = function()
		if currentInput == "" then
			warn("Please enter a player name or partial name.")
			return
		end

		local inputLower = currentInput:lower()
		local targetPlayer

		for _, player in pairs(Players:GetPlayers()) do
			if player ~= LocalPlayer then
				if player.Name:lower():sub(1, #inputLower) == inputLower then
					targetPlayer = player
					break
				end
			end
		end

		if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
			local hrp = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
			if hrp then
				local goalCFrame = targetPlayer.Character.HumanoidRootPart.CFrame

				local tweenInfo = TweenInfo.new(
					1, -- time in seconds
					Enum.EasingStyle.Quad,
					Enum.EasingDirection.Out
				)

				local tween = TweenService:Create(hrp, tweenInfo, {CFrame = goalCFrame})
				tween:Play()

				print("Tween teleporting to", targetPlayer.Name)
			else
				warn("Your character's HumanoidRootPart not found.")
			end
		else
			warn("No matching player found or character not loaded.")
		end
	end
})

local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

local noclipEnabled = false

Tab:AddToggle({
	Name = "Noclip",
	Default = false,
	Callback = function(Value)
		noclipEnabled = Value
	end    
})

-- Loop to apply/remove noclip
RunService.Stepped:Connect(function()
	if not noclipEnabled then return end

	local character = LocalPlayer.Character
	if not character then return end

	for _, part in pairs(character:GetDescendants()) do
		if part:IsA("BasePart") and part.CanCollide then
			part.CanCollide = false
		end
	end
end)

local UIS = game:GetService("UserInputService")
local infiniteJumpEnabled = false

Tab:AddToggle({
	Name = "Infinite Jump",
	Default = false,
	Callback = function(Value)
		infiniteJumpEnabled = Value
	end
})

local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera

local shiftLockEnabled = false

Tab:AddToggle({
	Name = "Shiftlock",
	Default = false,
	Callback = function(Value)
		shiftLockEnabled = Value
		UserInputService.MouseBehavior = Value and Enum.MouseBehavior.LockCenter or Enum.MouseBehavior.Default
	end
})

RunService.RenderStepped:Connect(function()
	if shiftLockEnabled and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
		local hrp = LocalPlayer.Character.HumanoidRootPart

		-- Get the horizontal look vector (ignore Y)
		local lookVector = Camera.CFrame.LookVector
		local flatLook = Vector3.new(lookVector.X, 0, lookVector.Z).Unit

		-- Set the player's orientation to face where the camera looks horizontally
		local currentPos = hrp.Position
		hrp.CFrame = CFrame.new(currentPos, currentPos + flatLook)
	end
end)

UIS.JumpRequest:Connect(function()
	if infiniteJumpEnabled and game.Players.LocalPlayer.Character then
		game.Players.LocalPlayer.Character:FindFirstChildOfClass("Humanoid"):ChangeState("Jumping")
	end
end)

local Tab = Window:MakeTab({
    Name = "👾 Executor",
    Icon = "",
    PremiumOnly = false
})

local Section = Tab:AddSection({
    Name = "Executor"
})

local textbox = Tab:AddTextbox({
	Name = "Executor",
	Default = "",
	TextDisappear = true,
	Callback = function(code)
		local success, err = pcall(function()
			loadstring(code)()
		end)

		if not success then
			warn("Error executing code:", err)
		end
	end	  
})

local Tab = Window:MakeTab({
    Name = "👀 FE",
    Icon = "",
    PremiumOnly = false
})

local Section = Tab:AddSection({
    Name = "FE"
})

Tab:AddButton({
	Name = "FE Sadboy(No hats)", Callback = function() 
loadstring(game:HttpGet("https://pastebin.com/raw/hgPJbwF0"))()
      		print("Button pressed")
  	end    
})

Tab:AddButton({
	Name = "FE Punch(No Hats &amp; Fling", Callback = function() 
loadstring(game:HttpGet(('http://pastefy.app/GvnHVjT5/raw'),true))()
      		print("Button Pressed")
  	end    
})

Tab:AddButton({
	Name = "FE Illusion",
	Callback = function() loadstring(game:HttpGet("https://scriptblox.com/raw/Universal-Script-FE-Illusion-Script-12744"))()
      		print("Button Pressed")
  	end    
})

Tab:AddButton({
	Name = "FE Krystal Dance(USE KEYBOARD)",
	Callback = function()	loadstring(game:HttpGet("https://pastebin.com/raw/vT1URaRJ"))() 
      		print("Button Pressed")
  	end    
})

Tab:AddButton({
	Name = "FE Keyboard",
	Callback = function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/Xxtan31/Ata/main/deltakeyboardcrack.txt", true))()
      		print("Button Pressed")
  	end    
})

Tab:AddButton({
	Name = "FE Fast Animation",
	Callback = function() loadstring(game:HttpGet("https://rawscripts.net/raw/Fast-Animation-FE_744"))()
      		print("Button Pressed")
  	end    
})

local Tab = Window:MakeTab({
    Name = "👀 ESP",
    Icon = "",
    PremiumOnly = false
})

local Section = Tab:AddSection({
    Name = "ESP"
})

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Camera = workspace.CurrentCamera
local LocalPlayer = Players.LocalPlayer

local highlights, tracers, labels = {}, {}, {}
local running = false

local highlightsEnabled = false
local tracersEnabled = false
local labelsEnabled = false

local renderConnection

local function clearESP()
    for _, h in pairs(highlights) do h:Destroy() end
    for _, t in pairs(tracers) do t:Remove() end
    for _, l in pairs(labels) do l:Remove() end
    highlights, tracers, labels = {}, {}, {}
end

local function updateESP()
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character then
            if highlightsEnabled and not highlights[player] then
                local highlight = Instance.new("Highlight")
                highlight.Adornee = player.Character
                highlight.FillColor = Color3.fromRGB(255, 0, 0)
                highlight.OutlineColor = Color3.new(0, 0, 0)
                highlight.Parent = game.CoreGui
                highlights[player] = highlight
            elseif not highlightsEnabled and highlights[player] then
                highlights[player]:Destroy()
                highlights[player] = nil
            end

            if tracersEnabled and not tracers[player] then
                local tracer = Drawing.new("Line")
                tracer.Thickness = 1
                tracer.Color = Color3.fromRGB(255, 0, 0)
                tracer.Visible = true
                tracers[player] = tracer
            elseif not tracersEnabled and tracers[player] then
                tracers[player]:Remove()
                tracers[player] = nil
            end

            if labelsEnabled and not labels[player] then
                local label = Drawing.new("Text")
                label.Size = 14
                label.Center = true
                label.Outline = true
                label.Color = Color3.new(1, 1, 1)
                labels[player] = label
            elseif not labelsEnabled and labels[player] then
                labels[player]:Remove()
                labels[player] = nil
            end
        end
    end
end

local function startESP()
    if running then return end
    running = true
    renderConnection = RunService.RenderStepped:Connect(function()
        updateESP()
        for player, highlight in pairs(highlights) do
            if player.Character then
                highlight.Adornee = player.Character
            else
                highlight:Destroy()
                highlights[player] = nil
            end
        end

        for player, tracer in pairs(tracers) do
            if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                local hrp = player.Character.HumanoidRootPart
                local screenPos, onScreen = Camera:WorldToViewportPoint(hrp.Position)
                if onScreen then
                    tracer.From = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y)
                    tracer.To = Vector2.new(screenPos.X, screenPos.Y)
                    tracer.Visible = true
                else
                    tracer.Visible = false
                end
            else
                tracer.Visible = false
            end
        end

        for player, label in pairs(labels) do
            if player.Character and player.Character:FindFirstChild("HumanoidRootPart") and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
                local hrp = player.Character.HumanoidRootPart
                local screenPos, onScreen = Camera:WorldToViewportPoint(hrp.Position)
                if onScreen then
                    local dist = math.floor((LocalPlayer.Character.HumanoidRootPart.Position - hrp.Position).Magnitude)
                    label.Text = player.Name .. " [" .. dist .. "m]"
                    label.Position = Vector2.new(screenPos.X, screenPos.Y - 20)
                    label.Visible = true
                else
                    label.Visible = false
                end
            else
                label.Visible = false
            end
        end
    end)
end

local function stopESP()
    if not running then return end
    running = false
    if renderConnection then
        renderConnection:Disconnect()
        renderConnection = nil
    end
    clearESP()
end

-- Replace these with your actual UI toggle code
Tab:AddToggle({
    Name = "ESP: Highlight",
    Default = false,
    Callback = function(value)
        highlightsEnabled = value
        if highlightsEnabled or tracersEnabled or labelsEnabled then
            startESP()
        else
            stopESP()
        end
    end
})

Tab:AddToggle({
    Name = "ESP: Tracers",
    Default = false,
    Callback = function(value)
        tracersEnabled = value
        if highlightsEnabled or tracersEnabled or labelsEnabled then
            startESP()
        else
            stopESP()
        end
    end
})

Tab:AddToggle({
    Name = "ESP: Name + Distance",
    Default = false,
    Callback = function(value)
        labelsEnabled = value
        if highlightsEnabled or tracersEnabled or labelsEnabled then
            startESP()
        else
            stopESP()
        end
    end
})

local Tab = Window:MakeTab({
    Name = "🪐 Universal",
    Icon = "",
    PremiumOnly = false
})

local Section = Tab:AddSection({
    Name = "Universal"
})

Tab:AddButton({
	Name = "Fly",
	Callback = function()
loadstring(Game:HttpGet("https://raw.githubusercontent.com/TheRealXORA/Roblox/refs/heads/Main/Scripts%20/Universal%20/Fly.lua", true))()
      		print("Button Pressed")
  	end    
})

Tab:AddButton({
	Name = "DEX V4 Mobile",
	Callback = function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/Artifacttx/YumeHub/refs/heads/main/Universal/DarkDex_Mobile", true))()
      		print("Button Pressed")
  	end    
})

Tab:AddButton({
	Name = "Auto Clicker",
	Callback = function() 
--thanks for not bypassing now i can upload more!!👨‍🍳

loadstring(game:HttpGet("https://pastebin.com/raw/nx1bmCSd"))()
      		print("Button Pressed")
  	end    
})

Tab:AddButton({
	Name = "Orbit",
	Callback = function() 
loadstring(game:HttpGet("https://rawscripts.net/raw/Universal-Script-FE-Orbit-14486"))()
      		print("Button Pressed")
  	end    
})

local CoolLabel

Tab:AddTextbox({
	Name = "Calculator",
	Default = "",
	TextDisappear = true,
	Callback = function(Value)
		-- Normalize input
		Value = Value:lower()
		Value = Value:gsub("x", "*")
		Value = Value:gsub("divide", "/")
		Value = Value:gsub("%s+", "") -- remove spaces

		-- Basic input validation
		if not Value:match("^[%d%+%-%*/%.%(%)]+$") then
			CoolLabel:Set("Error: Invalid characters")
			return
		end

		local func, err = loadstring("return " .. Value)
		if not func then
			CoolLabel:Set("Error: Invalid expression")
			return
		end

		local success, result = pcall(func)
		if success and type(result) == "number" then
			CoolLabel:Set("Result: " .. result)
		else
			CoolLabel:Set("Error: Evaluation failed")
		end
	end
})

CoolLabel = Tab:AddLabel("Result: ")

local Tab = Window:MakeTab({
    Name = "🎮 Games",
    Icon = "",
    PremiumOnly = false
})

local Section = Tab:AddSection({
    Name = "Games"
})




























































OrionLib:Init()
